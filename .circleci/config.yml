version: 2.1

jobs:
  tests-go:
    machine:
      image: ubuntu-2204:current
    parameters:
      go-image:
        type: string
        default: "cimg/go:1.23"
    docker:
      - image: << parameters.go-image >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: |
            go get -v -t -d ./...
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Create a temp directory for artifacts
          command: |
            mkdir -p /tmp/artifacts
      - run:
          name: Lint go code
          command: | 
            go vet  ./...
            go install golang.org/x/lint/golint@latest && golint ./...
      - run:
          name: Start InfluxDB service
          command: |
            ./scripts/influxdb-restart.sh \
              --export-url-as TESTING_INFLUXDB_URL2 \
              --export-db-as TESTING_INFLUXDB_DATABASE2 \
              --export-token-as TESTING_INFLUXDB_TOKEN2
      - run:
          name: Run tests
          command: |
            echo "DEBUG: TESTING_INFLUXDB_URL2=$TESTING_INFLUXDB_URL2" # TODO simon: do not commit!!!
            echo "DEBUG: TESTING_INFLUXDB_DATABASE2=$TESTING_INFLUXDB_DATABASE2" # TODO simon: do not commit!!!
            echo "DEBUG: TESTING_INFLUXDB_TOKEN2=$TESTING_INFLUXDB_TOKEN2" # TODO simon: do not commit!!!
            echo
            echo "DEBUG: TESTING_INFLUXDB_URL=$TESTING_INFLUXDB_URL" # TODO simon: do not commit!!!
            echo "DEBUG: TESTING_INFLUXDB_DATABASE=$TESTING_INFLUXDB_DATABASE" # TODO simon: do not commit!!!
            echo "DEBUG: TESTING_INFLUXDB_TOKEN=$TESTING_INFLUXDB_TOKEN" # TODO simon: do not commit!!!
            if [[ "$CIRCLE_BRANCH" == pull/* ]]; then
              GOEXPERIMENT=nocoverageredesign go test -v -cover -coverprofile=coverage.out ./...
            else
              GOEXPERIMENT=nocoverageredesign go test -v -cover -coverprofile=coverage.out --tags e2e ./...
            fi
      - run:
          name: Coverage Report
          command: |
            go tool cover -html=coverage.out -o coverage.html
            mv coverage.html /tmp/artifacts
          when: always
      - run:
          name: Report test results to codecov
          command: |
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
            curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            shasum -a 256 -c codecov.SHA256SUM
            chmod +x ./codecov
            ./codecov
      - store_artifacts:
          path: /tmp/artifacts

  lint:
    docker:
      - image: golangci/golangci-lint
    steps:
      - checkout
      - run:
          name: Lint go code
          command: |
            golangci-lint run -v 

workflows:
  version: 2
  build:
    jobs:
      - tests-go
      - lint
